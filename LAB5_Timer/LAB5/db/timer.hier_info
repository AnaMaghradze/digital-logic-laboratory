|de0_nano_soc_baseline
CLOCK_50 => digitPositionDecoder:d2.clk
CLOCK_50 => decoder:d1.clk
CLOCK_50 => prevKey[0].CLK
CLOCK_50 => prevKey[1].CLK
CLOCK_50 => isTimerCounting.CLK
CLOCK_50 => clock_counter[0].CLK
CLOCK_50 => clock_counter[1].CLK
CLOCK_50 => clock_counter[2].CLK
CLOCK_50 => clock_counter[3].CLK
CLOCK_50 => clock_counter[4].CLK
CLOCK_50 => clock_counter[5].CLK
CLOCK_50 => clock_counter[6].CLK
CLOCK_50 => clock_counter[7].CLK
CLOCK_50 => clock_counter[8].CLK
CLOCK_50 => clock_counter[9].CLK
CLOCK_50 => clock_counter[10].CLK
CLOCK_50 => clock_counter[11].CLK
CLOCK_50 => clock_counter[12].CLK
CLOCK_50 => clock_counter[13].CLK
CLOCK_50 => clock_counter[14].CLK
CLOCK_50 => clock_counter[15].CLK
CLOCK_50 => clock_counter[16].CLK
CLOCK_50 => clock_counter[17].CLK
CLOCK_50 => clock_counter[18].CLK
CLOCK_50 => clock_counter[19].CLK
CLOCK_50 => clock_counter[20].CLK
CLOCK_50 => clock_counter[21].CLK
CLOCK_50 => clock_counter[22].CLK
CLOCK_50 => clock_counter[23].CLK
CLOCK_50 => clock_counter[24].CLK
CLOCK_50 => clock_counter[25].CLK
CLOCK_50 => clock_counter[26].CLK
CLOCK_50 => clock_counter[27].CLK
CLOCK_50 => clock_counter[28].CLK
CLOCK_50 => clock_counter[29].CLK
CLOCK_50 => clock_counter[30].CLK
CLOCK_50 => clock_counter[31].CLK
CLOCK_50 => counter[0].CLK
CLOCK_50 => counter[1].CLK
CLOCK_50 => counter[2].CLK
CLOCK_50 => counter[3].CLK
CLOCK_50 => counter[4].CLK
CLOCK_50 => counter[5].CLK
CLOCK_50 => counter[6].CLK
CLOCK_50 => counter[7].CLK
CLOCK_50 => counter[8].CLK
CLOCK_50 => counter[9].CLK
CLOCK_50 => counter[10].CLK
CLOCK_50 => counter[11].CLK
CLOCK_50 => counter[12].CLK
CLOCK_50 => counter[13].CLK
CLOCK_50 => counter[14].CLK
CLOCK_50 => counter[15].CLK
CLOCK_50 => counter[16].CLK
CLOCK_50 => counter[17].CLK
CLOCK_50 => counter[18].CLK
CLOCK_50 => counter[19].CLK
CLOCK_50 => counter[20].CLK
CLOCK_50 => counter[21].CLK
CLOCK_50 => counter[22].CLK
CLOCK_50 => counter[23].CLK
CLOCK_50 => counter[24].CLK
CLOCK_50 => counter[25].CLK
CLOCK_50 => counter[26].CLK
CLOCK_50 => counter[27].CLK
CLOCK_50 => counter[28].CLK
CLOCK_50 => counter[29].CLK
CLOCK_50 => counter[30].CLK
CLOCK_50 => counter[31].CLK
KEY[0] => always0.IN1
KEY[0] => prevKey[0].DATAIN
KEY[1] => always0.IN1
KEY[1] => prevKey[1].DATAIN
GPIO_1[0] <> GPIO_1[0]
GPIO_1[1] <> GPIO_1[1]
GPIO_1[2] <> GPIO_1[2]
GPIO_1[3] <> GPIO_1[3]
GPIO_1[4] <> GPIO_1[4]
GPIO_1[5] <> GPIO_1[5]
GPIO_1[6] <> GPIO_1[6]
GPIO_1[7] <> <UNC>
GPIO_1[8] <> <UNC>
GPIO_1[9] <> <UNC>
GPIO_1[10] <> <UNC>
GPIO_1[11] <> <UNC>
GPIO_1[12] <> <UNC>
GPIO_1[13] <> <UNC>
GPIO_1[14] <> <UNC>
GPIO_1[15] <> <UNC>
GPIO_1[16] <> <UNC>
GPIO_1[17] <> <UNC>
GPIO_1[18] <> <UNC>
GPIO_1[19] <> <UNC>
GPIO_1[20] <> <UNC>
GPIO_1[21] <> <UNC>
GPIO_1[22] <> <UNC>
GPIO_1[23] <> <UNC>
GPIO_1[24] <> <UNC>
GPIO_1[25] <> <UNC>
GPIO_1[26] <> <UNC>
GPIO_1[27] <> <UNC>
GPIO_1[28] <> <UNC>
GPIO_1[29] <> <UNC>
GPIO_1[30] <> <UNC>
GPIO_1[31] <> <UNC>
GPIO_1[32] <> GPIO_1[32]
GPIO_1[33] <> GPIO_1[33]
GPIO_1[34] <> GPIO_1[34]
GPIO_1[35] <> GPIO_1[35]


|de0_nano_soc_baseline|digitPositionDecoder:d2
clk => clk_counter[0].CLK
clk => clk_counter[1].CLK
clk => clk_counter[2].CLK
clk => clk_counter[3].CLK
clk => clk_counter[4].CLK
clk => clk_counter[5].CLK
clk => clk_counter[6].CLK
clk => clk_counter[7].CLK
clk => clk_counter[8].CLK
clk => clk_counter[9].CLK
clk => clk_counter[10].CLK
clk => clk_counter[11].CLK
clk => clk_counter[12].CLK
clk => clk_counter[13].CLK
clk => clk_counter[14].CLK
clk => clk_counter[15].CLK
clk => clk_counter[16].CLK
clk => clk_counter[17].CLK
clk => clk_counter[18].CLK
clk => clk_counter[19].CLK
clk => clk_counter[20].CLK
clk => clk_counter[21].CLK
clk => clk_counter[22].CLK
clk => clk_counter[23].CLK
clk => clk_counter[24].CLK
clk => clk_counter[25].CLK
clk => clk_counter[26].CLK
clk => clk_counter[27].CLK
clk => clk_counter[28].CLK
clk => clk_counter[29].CLK
clk => clk_counter[30].CLK
clk => clk_counter[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => position[0]~reg0.CLK
clk => position[1]~reg0.CLK
clk => position[2]~reg0.CLK
clk => position[3]~reg0.CLK
clk => digitAtPosition[0]~reg0.CLK
clk => digitAtPosition[1]~reg0.CLK
clk => digitAtPosition[2]~reg0.CLK
clk => digitAtPosition[3]~reg0.CLK
in[0] => Mod0.IN17
in[0] => Mod1.IN20
in[0] => Mod2.IN23
in[0] => Mod3.IN27
in[1] => Mod0.IN16
in[1] => Mod1.IN19
in[1] => Mod2.IN22
in[1] => Mod3.IN26
in[2] => Mod0.IN15
in[2] => Mod1.IN18
in[2] => Mod2.IN21
in[2] => Mod3.IN25
in[3] => Mod0.IN14
in[3] => Mod1.IN17
in[3] => Mod2.IN20
in[3] => Mod3.IN24
in[4] => Mod0.IN13
in[4] => Mod1.IN16
in[4] => Mod2.IN19
in[4] => Mod3.IN23
in[5] => Mod0.IN12
in[5] => Mod1.IN15
in[5] => Mod2.IN18
in[5] => Mod3.IN22
in[6] => Mod0.IN11
in[6] => Mod1.IN14
in[6] => Mod2.IN17
in[6] => Mod3.IN21
in[7] => Mod0.IN10
in[7] => Mod1.IN13
in[7] => Mod2.IN16
in[7] => Mod3.IN20
in[8] => Mod0.IN9
in[8] => Mod1.IN12
in[8] => Mod2.IN15
in[8] => Mod3.IN19
in[9] => Mod0.IN8
in[9] => Mod1.IN11
in[9] => Mod2.IN14
in[9] => Mod3.IN18
in[10] => Mod0.IN7
in[10] => Mod1.IN10
in[10] => Mod2.IN13
in[10] => Mod3.IN17
in[11] => Mod0.IN6
in[11] => Mod1.IN9
in[11] => Mod2.IN12
in[11] => Mod3.IN16
in[12] => Mod0.IN5
in[12] => Mod1.IN8
in[12] => Mod2.IN11
in[12] => Mod3.IN15
in[13] => Mod0.IN4
in[13] => Mod1.IN7
in[13] => Mod2.IN10
in[13] => Mod3.IN14
digitAtPosition[0] <= digitAtPosition[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digitAtPosition[1] <= digitAtPosition[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digitAtPosition[2] <= digitAtPosition[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
digitAtPosition[3] <= digitAtPosition[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
position[0] <= position[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
position[1] <= position[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
position[2] <= position[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
position[3] <= position[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|de0_nano_soc_baseline|decoder:d1
clk => outsegment[0]~reg0.CLK
clk => outsegment[1]~reg0.CLK
clk => outsegment[2]~reg0.CLK
clk => outsegment[3]~reg0.CLK
clk => outsegment[4]~reg0.CLK
clk => outsegment[5]~reg0.CLK
clk => outsegment[6]~reg0.CLK
isCounting => outsegment.OUTPUTSELECT
isCounting => outsegment.OUTPUTSELECT
isCounting => outsegment.OUTPUTSELECT
isCounting => outsegment.OUTPUTSELECT
isCounting => outsegment.OUTPUTSELECT
isCounting => outsegment.OUTPUTSELECT
isCounting => outsegment.OUTPUTSELECT
digit[0] => Mux0.IN13
digit[0] => Mux1.IN13
digit[0] => Mux2.IN13
digit[0] => Mux3.IN13
digit[0] => Mux4.IN13
digit[0] => Mux5.IN13
digit[0] => Mux6.IN13
digit[0] => LessThan0.IN8
digit[1] => Mux0.IN12
digit[1] => Mux1.IN12
digit[1] => Mux2.IN12
digit[1] => Mux3.IN12
digit[1] => Mux4.IN12
digit[1] => Mux5.IN12
digit[1] => Mux6.IN12
digit[1] => LessThan0.IN7
digit[2] => Mux0.IN11
digit[2] => Mux1.IN11
digit[2] => Mux2.IN11
digit[2] => Mux3.IN11
digit[2] => Mux4.IN11
digit[2] => Mux5.IN11
digit[2] => Mux6.IN11
digit[2] => LessThan0.IN6
digit[3] => Mux0.IN10
digit[3] => Mux1.IN10
digit[3] => Mux2.IN10
digit[3] => Mux3.IN10
digit[3] => Mux4.IN10
digit[3] => Mux5.IN10
digit[3] => Mux6.IN10
digit[3] => LessThan0.IN5
outsegment[0] <= outsegment[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outsegment[1] <= outsegment[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outsegment[2] <= outsegment[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outsegment[3] <= outsegment[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outsegment[4] <= outsegment[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outsegment[5] <= outsegment[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
outsegment[6] <= outsegment[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


